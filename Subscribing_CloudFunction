// SIT210-Task3.3D-CloudFunction


 
// Subscribing to Pats and Waves from Deakin
 
int light_led= D6;

int led1 = D7;  // The on-board LED

void event_Buddy_Published(const char *event, const char *data);


void setup()
{   
    Particle.subscribe("Deakin_RIOT_SIT210_Photon_Buddy", event_Buddy_Published);
  
    
    pinMode(light_led, OUTPUT);
    pinMode(led1, OUTPUT);
    digitalWrite(light_led, LOW);
    digitalWrite(led1, LOW);
}

void loop()
{
  
}


void event_Buddy_Published(const char *event, const char *data)
{
    if (strcmp(data, "wave") == 0)
    {
       
        digitalWrite(light_led, HIGH);
        digitalWrite(led1, HIGH);
        delay(1000);
        digitalWrite(light_led, LOW);
        digitalWrite(led1, LOW);
        delay(1000);
        
        
        digitalWrite(light_led, HIGH);
        digitalWrite(led1, HIGH);
        delay(1000);
        digitalWrite(light_led, LOW);
        digitalWrite(led1, LOW);
        delay(1000);
        
        digitalWrite(light_led, HIGH);
        digitalWrite(led1, HIGH);
        delay(1000);
        digitalWrite(light_led, LOW);
        digitalWrite(led1, LOW);
        delay(1000);
        
    }
    else if (strcmp(data, "pat") == 0)
    {
        
       
        digitalWrite(light_led, HIGH);
        delay(800);
        digitalWrite(light_led, LOW);
         delay(800);
        digitalWrite(light_led, HIGH);
        delay(800);
        digitalWrite(light_led, LOW);
         delay(800);
        digitalWrite(light_led, HIGH);
        delay(800);
        digitalWrite(light_led, LOW);
         delay(800);
    }
  
}
